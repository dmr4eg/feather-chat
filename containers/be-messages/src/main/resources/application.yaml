server:
  address: ${SPRING_HOST}
  port: ${SPRING_PORT}

logging:
  level:
    root: warn
    org:
      hibernate: INFO
      springframework:
        web: debug

spring:
  application:
    name: nss-job-messages
  jackson:
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?currentSchema=${POSTGRES_SCHEMA}
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD}
  jpa:
    show-sql: true
    generate-ddl: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update # none, validate, update, create, create-drop
  kafka:
    bootstrap-servers: ${KAFKA_HOST}:${KAFKA_PORT}
    admin:
      auto-create: true
    producer:
      key-serializer: org.apache.kafka.common.serialization.UUIDSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      client-id: ${KAFKA_ID}
    consumer:
      properties:
        spring:
          json:
            trusted:
              packages: "nss.be.messages.model"
      key-deserializer: org.apache.kafka.common.serialization.UUIDDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: latest
      group-id: ${KAFKA_GROUP}
      client-id: ${KAFKA_ID}
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}

springdoc:
  swagger-ui:
    path: /swagger-ui.html
  api-docs:
    path: /v3/api-docs
    enabled: true
  show-actuator: true
